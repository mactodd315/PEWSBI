[model]
name = marginalized_time
low-frequency-cutoff = 30.0

marginalize_vector_params = tc, ra, dec, polarization
marginalize_vector_samples = 500

; You shouldn't use phase marginalization if the approximant has
; higher-order modes
marginalize_phase = True

marginalize_distance = True
marginalize_distance_param = distance
marginalize_distance_interpolator = True
marginalize_distance_snr_range = 5, 50
marginalize_distance_density = 100, 100
marginalize_distance_samples = 1000

[data]
instruments = H1
trigger-time = 1126259462.43
; See the documentation at
; http://pycbc.org/pycbc/latest/html/inference.html#simulated-bbh-example
; for details on the following settings:
analysis-start-time = -6
analysis-end-time = 2
psd-estimation = median-mean
psd-start-time = -8
psd-end-time = 8
psd-inverse-length = 8
psd-segment-length = 8
psd-segment-stride = 4
frame-files = H1:H-H1_SIMULATED_STRAIN-1126259447-30.gwf
channel-name = H1:SIMULATED_STRAIN
sample-rate = 2048
strain-high-pass = 5
pad-data = 3

[sampler]
name = dynesty
dlogz = 1.0
nlive = 500

[variable_params]
; waveform parameters that will vary in MCMC
mass1 =
mass2 =
inclination =
distance =
polarization =
ra =
dec =
tc =

[static_params]
; waveform parameters that will not change in MCMC
approximant = IMRPhenomD
f_lower = 20

[prior-mass1]
name = uniform
min-mass1 = 15
max-mass1 = 50

[prior-mass2]
name = uniform
min-mass2 = 15
max-mass2 = 50

[prior-ra]
name = uniform_angle

[prior-dec]
name = cos_angle

[prior-tc]
#; coalescence time prior
name = uniform
min-tc = 1126259462.35
max-tc = 1126259462.45

[prior-distance]
#; following gives a uniform in volume
name = uniform_radius
min-distance = 100
max-distance = 1000

[prior-polarization]
name = uniform_angle

[prior-inclination]
name = sin_angle