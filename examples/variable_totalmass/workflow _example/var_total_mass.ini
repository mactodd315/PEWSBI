[workflow]

[executables]
create_injections = /home/mrtodd/miniconda3/envs/ml_sbi/bin/pycbc_create_injections
write_sims = /home/mrtodd/Projects/ml_sbi/pewsbi_wf_example2/bin/simulate_data
train_nn = /home/mrtodd/Projects/ml_sbi/pewsbi_wf_example2/bin/train_neural_network
sample = /home/mrtodd/Projects/ml_sbi/pewsbi_wf_example2/bin/sample
plot = /home/mrtodd/Projects/ml_sbi/pewsbi_wf_example2/bin/plot
make_noise = /home/mrtodd/Projects/ml_sbi/pewsbi_wf_example2/bin/generate_noise
pycbc_plot = /home/mrtodd/miniconda3/envs/ml_sbi/bin/pycbc_inference_plot_posterior

# Options supplied here go to all uses of these executables in the workflow
[create_injections]
seed = 0

# Options for write_sims
[write_sims]
signal-length = 2048
delta-f = 512

# Options for training neural net
[train_nn]

# Options for sampling
[sample]
n-samples = 10000
n-bins = 500

[make_noise]

# options to configure how Pegasus will run the workflow can be put here
[pegasus_profile]
pycbc|submit-directory = ./

# options that tell how much resources a particular job needs can be put here
# The exe key name is appended. If not specified, whatever the default
# resource request of your cluster is used.
[pegasus_profile-argument_exe]
# This example follows the condor format, any standard options from condor
# can be used.
condor|request_memory = 1000
condor|request_cpus = 2